/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #a1a1aa;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #a1a1aa;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  border-color: currentColor;
  --tw-blur: var(--tw-empty,/*!*/ /*!*/);
  --tw-brightness: var(--tw-empty,/*!*/ /*!*/);
  --tw-contrast: var(--tw-empty,/*!*/ /*!*/);
  --tw-grayscale: var(--tw-empty,/*!*/ /*!*/);
  --tw-hue-rotate: var(--tw-empty,/*!*/ /*!*/);
  --tw-invert: var(--tw-empty,/*!*/ /*!*/);
  --tw-saturate: var(--tw-empty,/*!*/ /*!*/);
  --tw-sepia: var(--tw-empty,/*!*/ /*!*/);
  --tw-drop-shadow: var(--tw-empty,/*!*/ /*!*/);
  --tw-filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.left-0 {
  left: 0px;
}

.top-0 {
  top: 0px;
}

.left-12 {
  left: 3rem;
}

.bottom-0 {
  bottom: 0px;
}

.z-40 {
  z-index: 40;
}

.m-0 {
  margin: 0px;
}

.m-6 {
  margin: 1.5rem;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-6 {
  margin-left: 1.5rem;
  margin-right: 1.5rem;
}

.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.ml-27 {
  margin-left: 6.75rem;
}

.ml-2 {
  margin-left: 0.5rem;
}

.ml-25 {
  margin-left: 6.25rem;
}

.mb-6 {
  margin-bottom: 1.5rem;
}

.mt-4 {
  margin-top: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mr-4 {
  margin-right: 1rem;
}

.ml-1 {
  margin-left: 0.25rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mr-6 {
  margin-right: 1.5rem;
}

.ml-6 {
  margin-left: 1.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mt-10 {
  margin-top: 2.5rem;
}

.mt-22 {
  margin-top: 5.5rem;
}

.mr-25 {
  margin-right: 6.25rem;
}

.mb-25 {
  margin-bottom: 6.25rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mr-8 {
  margin-right: 2rem;
}

.ml-9 {
  margin-left: 2.25rem;
}

.box-border {
  box-sizing: border-box;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.grid {
  display: grid;
}

.hidden {
  display: none;
}

.h-full {
  height: 100%;
}

.h-9 {
  height: 2.25rem;
}

.h-22 {
  height: 5.5rem;
}

.h-auto {
  height: auto;
}

.h-18 {
  height: 4.5rem;
}

.h-20 {
  height: 5rem;
}

.h-5 {
  height: 1.25rem;
}

.h-28 {
  height: 7rem;
}

.h-10 {
  height: 2.5rem;
}

.h-12 {
  height: 3rem;
}

.h-6 {
  height: 1.5rem;
}

.h-19 {
  height: 4.75rem;
}

.h-8 {
  height: 2rem;
}

.h-4 {
  height: 1rem;
}

.h-2 {
  height: 0.5rem;
}

.max-h-20px {
  max-height: 20px;
}

.min-h-60px {
  min-height: 60px;
}

.w-full {
  width: 100%;
}

.w-9 {
  width: 2.25rem;
}

.w-12 {
  width: 3rem;
}

.w-auto {
  width: auto;
}

.w-\[976px\] {
  width: 976px;
}

.w-18 {
  width: 4.5rem;
}

.w-\[716px\] {
  width: 716px;
}

.w-147 {
  width: 36.75rem;
}

.w-20 {
  width: 5rem;
}

.w-1px {
  width: 1px;
}

.w-28 {
  width: 7rem;
}

.w-108 {
  width: 30rem;
}

.w-97 {
  width: 25rem;
}

.w-\[400px\] {
  width: 400px;
}

.w-32 {
  width: 8rem;
}

.w-88 {
  width: 22rem;
}

.w-27 {
  width: 6.75rem;
}

.w-19 {
  width: 4.75rem;
}

.w-8 {
  width: 2rem;
}

.w-4 {
  width: 1rem;
}

.w-6 {
  width: 1.5rem;
}

.min-w-20px {
  min-width: 20px;
}

.min-w-8px {
  min-width: 8px;
}

.min-w-48px {
  min-width: 48px;
}

.max-w-80px {
  max-width: 80px;
}

.max-w-200px {
  max-width: 200px;
}

.max-w-1\/2 {
  max-width: 50%;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-grow-0 {
  flex-grow: 0;
}

.flex-grow {
  flex-grow: 1;
}

.transform {
  transform: var(--tw-transform);
}

.cursor-pointer {
  cursor: pointer;
}

.cursor-not-allowed {
  cursor: not-allowed;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.flex-row {
  flex-direction: row;
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.place-items-center {
  place-items: center;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-4 {
  gap: 1rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-6 {
  gap: 1.5rem;
}

.gap-y-4 {
  row-gap: 1rem;
}

.gap-x-4 {
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.gap-x-2 {
  -moz-column-gap: 0.5rem;
       column-gap: 0.5rem;
}

.gap-x-6 {
  -moz-column-gap: 1.5rem;
       column-gap: 1.5rem;
}

.gap-x-1 {
  -moz-column-gap: 0.25rem;
       column-gap: 0.25rem;
}

.gap-y-6 {
  row-gap: 1.5rem;
}

.gap-y-1 {
  row-gap: 0.25rem;
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-lg {
  border-radius: 0.5rem;
}

.rounded-full {
  border-radius: 9999px;
}

.border {
  border-width: 1px;
}

.border-0 {
  border-width: 0px;
}

.border-2 {
  border-width: 2px;
}

.border-t {
  border-top-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-monochrome-medium-tint {
  --tw-border-opacity: 1;
  border-color: rgba(227, 230, 232, var(--tw-border-opacity));
}

.border-monochrome-dark100 {
  --tw-border-opacity: 1;
  border-color: rgba(47, 45, 47, var(--tw-border-opacity));
}

.border-blue-default {
  --tw-border-opacity: 1;
  border-color: rgba(0, 127, 255, var(--tw-border-opacity));
}

.border-monochrome-dark {
  --tw-border-opacity: 1;
  border-color: rgba(68, 66, 68, var(--tw-border-opacity));
}

.border-monochrome-shade {
  --tw-border-opacity: 1;
  border-color: rgba(88, 98, 109, var(--tw-border-opacity));
}

.border-monochrome-black {
  --tw-border-opacity: 1;
  border-color: rgba(27, 25, 27, var(--tw-border-opacity));
}

.border-current-color {
  border-color: currentColor;
}

.border-opacity-50 {
  --tw-border-opacity: 0.5;
}

.bg-blue-default {
  --tw-bg-opacity: 1;
  background-color: rgba(0, 127, 255, var(--tw-bg-opacity));
}

.bg-transparent {
  background-color: transparent;
}

.bg-monochrome-white {
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-\[\#2F2D2F\] {
  --tw-bg-opacity: 1;
  background-color: rgba(47, 45, 47, var(--tw-bg-opacity));
}

.bg-monochrome-black {
  --tw-bg-opacity: 1;
  background-color: rgba(27, 25, 27, var(--tw-bg-opacity));
}

.bg-monochrome-dark100 {
  --tw-bg-opacity: 1;
  background-color: rgba(47, 45, 47, var(--tw-bg-opacity));
}

.bg-monochrome-dark {
  --tw-bg-opacity: 1;
  background-color: rgba(68, 66, 68, var(--tw-bg-opacity));
}

.bg-monochrome-light-tint {
  --tw-bg-opacity: 1;
  background-color: rgba(248, 249, 251, var(--tw-bg-opacity));
}

.bg-monochrome-medium-tint {
  --tw-bg-opacity: 1;
  background-color: rgba(227, 230, 232, var(--tw-bg-opacity));
}

.bg-red-default {
  --tw-bg-opacity: 1;
  background-color: rgba(238, 0, 0, var(--tw-bg-opacity));
}

.bg-monochrome-default {
  --tw-bg-opacity: 1;
  background-color: rgba(104, 116, 129, var(--tw-bg-opacity));
}

.bg-blue-ultralight-tint {
  --tw-bg-opacity: 1;
  background-color: rgba(229, 242, 255, var(--tw-bg-opacity));
}

.bg-opacity-10 {
  --tw-bg-opacity: 0.1;
}

.bg-opacity-\[0\.97\] {
  --tw-bg-opacity: 0.97;
}

.p-0 {
  padding: 0px;
}

.p-4 {
  padding: 1rem;
}

.p-5 {
  padding: 1.25rem;
}

.p-6 {
  padding: 1.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-\[6px\] {
  padding-left: 6px;
  padding-right: 6px;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-16 {
  padding-left: 4rem;
  padding-right: 4rem;
}

.px-\[320px\] {
  padding-left: 320px;
  padding-right: 320px;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.pt-8 {
  padding-top: 2rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pb-6 {
  padding-bottom: 1.5rem;
}

.pl-2 {
  padding-left: 0.5rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pt-5 {
  padding-top: 1.25rem;
}

.pb-7 {
  padding-bottom: 1.75rem;
}

.pb-4 {
  padding-bottom: 1rem;
}

.pl-6 {
  padding-left: 1.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pr-6 {
  padding-right: 1.5rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.align-middle {
  vertical-align: middle;
}

.font-regular {
  font-family: OpenSans, sans-serif;
}

.font-light {
  font-family: OpenSans-Light, sans-serif;
}

.font-bold {
  font-family: OpenSans-Semibold, sans-serif;
}

.text-18 {
  font-size: 18px;
}

.text-24 {
  font-size: 24px;
}

.text-12 {
  font-size: 12px;
}

.text-14 {
  font-size: 14px;
}

.text-16 {
  font-size: 16px;
}

.text-20 {
  font-size: 20px;
}

.text-32 {
  font-size: 32px;
}

.text-64 {
  font-size: 64px;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.leading-24 {
  line-height: 24px;
}

.leading-32 {
  line-height: 32px;
}

.leading-20 {
  line-height: 20px;
}

.leading-22 {
  line-height: 22px;
}

.leading-16 {
  line-height: 16px;
}

.leading-40 {
  line-height: 40px;
}

.leading-86 {
  line-height: 86px;
}

.leading-28 {
  line-height: 28px;
}

.leading-38 {
  line-height: 38px;
}

.leading-48 {
  line-height: 48px;
}

.tracking-normal {
  letter-spacing: 0em;
}

.text-monochrome-black {
  --tw-text-opacity: 1;
  color: rgba(27, 25, 27, var(--tw-text-opacity));
}

.text-monochrome-default {
  --tw-text-opacity: 1;
  color: rgba(104, 116, 129, var(--tw-text-opacity));
}

.text-monochrome-white {
  --tw-text-opacity: 1;
  color: rgba(255, 255, 255, var(--tw-text-opacity));
}

.text-monochrome-medium-tint {
  --tw-text-opacity: 1;
  color: rgba(227, 230, 232, var(--tw-text-opacity));
}

.text-monochrome-dark-tint {
  --tw-text-opacity: 1;
  color: rgba(164, 172, 179, var(--tw-text-opacity));
}

.text-monochrome-light-tint {
  --tw-text-opacity: 1;
  color: rgba(248, 249, 251, var(--tw-text-opacity));
}

.text-blue-default {
  --tw-text-opacity: 1;
  color: rgba(0, 127, 255, var(--tw-text-opacity));
}

.text-blue-medium-tint {
  --tw-text-opacity: 1;
  color: rgba(51, 153, 255, var(--tw-text-opacity));
}

.text-blue-shade {
  --tw-text-opacity: 1;
  color: rgba(0, 108, 216, var(--tw-text-opacity));
}

.text-monochrome-gray {
  --tw-text-opacity: 1;
  color: rgba(129, 134, 139, var(--tw-text-opacity));
}

.text-red-default {
  --tw-text-opacity: 1;
  color: rgba(238, 0, 0, var(--tw-text-opacity));
}

.text-monochrome-shade {
  --tw-text-opacity: 1;
  color: rgba(88, 98, 109, var(--tw-text-opacity));
}

.text-orange-default {
  --tw-text-opacity: 1;
  color: rgba(245, 166, 35, var(--tw-text-opacity));
}

.text-green-default {
  --tw-text-opacity: 1;
  color: rgba(0, 182, 2, var(--tw-text-opacity));
}

.text-opacity-40 {
  --tw-text-opacity: 0.4;
}

.no-underline {
  text-decoration: none;
}

.placeholder-monochrome-dark::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(68, 66, 68, var(--tw-placeholder-opacity));
}

.placeholder-monochrome-dark:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(68, 66, 68, var(--tw-placeholder-opacity));
}

.placeholder-monochrome-dark::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgba(68, 66, 68, var(--tw-placeholder-opacity));
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-25 {
  opacity: 0.25;
}

.opacity-50 {
  opacity: 0.5;
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.filter {
  filter: var(--tw-filter);
}

.transition {
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: background-color, border-color, color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.link {
  background-color: transparent;
  color: #007fff;
  cursor: pointer;
}

.link:hover {
  color: #3399ff;
}

.link:active {
  color: #006cd8;
}

.text-ellipsis {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.hover\:border-blue-default:hover {
  --tw-border-opacity: 1;
  border-color: rgba(0, 127, 255, var(--tw-border-opacity));
}

.hover\:bg-monochrome-default:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(104, 116, 129, var(--tw-bg-opacity));
}

.hover\:bg-monochrome-light-tint:hover {
  --tw-bg-opacity: 1;
  background-color: rgba(248, 249, 251, var(--tw-bg-opacity));
}

.hover\:bg-opacity-5:hover {
  --tw-bg-opacity: 0.05;
}

.hover\:text-blue-default:hover {
  --tw-text-opacity: 1;
  color: rgba(0, 127, 255, var(--tw-text-opacity));
}

.hover\:text-blue-medium-tint:hover {
  --tw-text-opacity: 1;
  color: rgba(51, 153, 255, var(--tw-text-opacity));
}

.hover\:text-red-medium-tint:hover {
  --tw-text-opacity: 1;
  color: rgba(241, 51, 51, var(--tw-text-opacity));
}

.focus\:border-monochrome-white:focus {
  --tw-border-opacity: 1;
  border-color: rgba(255, 255, 255, var(--tw-border-opacity));
}

.active\:text-blue-shade:active {
  --tw-text-opacity: 1;
  color: rgba(0, 108, 216, var(--tw-text-opacity));
}

.active\:text-red-shade:active {
  --tw-text-opacity: 1;
  color: rgba(204, 0, 0, var(--tw-text-opacity));
}